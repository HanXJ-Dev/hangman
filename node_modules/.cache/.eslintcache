[{"/Users/hanxingjian/Desktop/Coding/hangman/src/index.js":"1","/Users/hanxingjian/Desktop/Coding/hangman/src/App.js":"2","/Users/hanxingjian/Desktop/Coding/hangman/src/components/preloader/index.js":"3","/Users/hanxingjian/Desktop/Coding/hangman/src/pages/game/index.js":"4","/Users/hanxingjian/Desktop/Coding/hangman/src/pages/home/index.js":"5","/Users/hanxingjian/Desktop/Coding/hangman/src/pages/game/Game.js":"6","/Users/hanxingjian/Desktop/Coding/hangman/src/components/preloader/Preloader.js":"7","/Users/hanxingjian/Desktop/Coding/hangman/src/pages/home/Home.js":"8","/Users/hanxingjian/Desktop/Coding/hangman/src/Words.js":"9","/Users/hanxingjian/Desktop/Coding/hangman/src/components/hangman/index.js":"10","/Users/hanxingjian/Desktop/Coding/hangman/src/components/keyboard/index.js":"11","/Users/hanxingjian/Desktop/Coding/hangman/src/components/endgame/index.js":"12","/Users/hanxingjian/Desktop/Coding/hangman/src/components/hangman/Hangman.js":"13","/Users/hanxingjian/Desktop/Coding/hangman/src/components/endgame/EndGame.js":"14","/Users/hanxingjian/Desktop/Coding/hangman/src/components/keyboard/Keyboard.js":"15"},{"size":492,"mtime":1653828687558,"results":"16","hashOfConfig":"17"},{"size":561,"mtime":1653828687562,"results":"18","hashOfConfig":"17"},{"size":38,"mtime":1653828687559,"results":"19","hashOfConfig":"17"},{"size":33,"mtime":1653828687561,"results":"20","hashOfConfig":"17"},{"size":33,"mtime":1653828687560,"results":"21","hashOfConfig":"17"},{"size":3109,"mtime":1653829436336,"results":"22","hashOfConfig":"17"},{"size":274,"mtime":1653828687558,"results":"23","hashOfConfig":"17"},{"size":443,"mtime":1653828739650,"results":"24","hashOfConfig":"17"},{"size":308,"mtime":1653828747130,"results":"25","hashOfConfig":"17"},{"size":33,"mtime":1653828874419,"results":"26","hashOfConfig":"17"},{"size":37,"mtime":1653828687559,"results":"27","hashOfConfig":"17"},{"size":36,"mtime":1653828831479,"results":"28","hashOfConfig":"17"},{"size":2477,"mtime":1653828859241,"results":"29","hashOfConfig":"17"},{"size":1016,"mtime":1653829738441,"results":"30","hashOfConfig":"17"},{"size":1472,"mtime":1653829967268,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sikhyi",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hanxingjian/Desktop/Coding/hangman/src/index.js",[],[],"/Users/hanxingjian/Desktop/Coding/hangman/src/App.js",[],[],"/Users/hanxingjian/Desktop/Coding/hangman/src/components/preloader/index.js",[],[],"/Users/hanxingjian/Desktop/Coding/hangman/src/pages/game/index.js",[],[],"/Users/hanxingjian/Desktop/Coding/hangman/src/pages/home/index.js",[],[],"/Users/hanxingjian/Desktop/Coding/hangman/src/pages/game/Game.js",["80"],[],"import React, { useState, useEffect } from \"react\";\nimport EndGame from \"../../components/endgame\";\nimport Hangman from \"../../components/hangman\";\nimport Keyboard from \"../../components/keyboard\";\nimport { Button, Stack, Heading, Center } from \"@chakra-ui/react\";\nimport { WORDS, randomWord } from \"../../Words\";\nimport \"animate.css\"\n\nconst LIVES = 6;\n\nexport default function Game() {\n  const [lives, setLives] = useState(LIVES);\n  const [guessed, setGuessed] = useState([]);\n  const [topic, setTopic] = useState(\"\");\n  const [word, setWord] = useState(\"\");\n  const [correctLetters, setCorrectLetters] = useState(-1);\n  const [gameState, setGameState] = useState(0);\n\n  const selectTopic = (topic) => {\n    let word = randomWord(topic);\n    setWord(word);\n    setTopic(topic);\n    setCorrectLetters(0)\n  };\n\n  const countOccurence = (letter) => {\n    const re = new RegExp(letter, \"g\");\n    const count = word.match(re).length;\n    return count;\n  };\n  \n  const selectLetter = (event) => {\n    setGuessed([...guessed, event.target.name]);\n\n    if (word.toLowerCase().indexOf(event.target.name.toLowerCase()) > -1) {\n      setCorrectLetters(correctLetters + countOccurence(event.target.name));\n    } else setLives(lives - 1);\n  };\n\n  useEffect(() => {\n    if (correctLetters === word.length) setGameState(1)\n  }, [correctLetters]);\n\n  useEffect(() => {\n    if (lives < 1) setGameState(2)\n  }, [lives]);\n\n  const generateGame = () => {\n    return (\n      <>\n        <Center>\n          <Heading pt={5}>{topic}</Heading>\n        </Center>\n        <Center mt={5}>\n          <Hangman lives={lives}/>\n        </Center>\n        <Center letterSpacing={5}>\n          {word.split(\"\").map((letter, idx) => {\n            return (\n              <Heading key={idx} className=\"animate__animated animate__bounceInLeft\">\n                {guessed.indexOf(letter) > -1 ? <Heading className=\"animate__animated animate__flipInX\">{letter}</Heading> : \"_\"}\n              </Heading>\n            );\n          })}\n        </Center>\n        <Center mt={2}>\n          <Heading size=\"xs\">Lives: {lives}</Heading>\n        </Center>\n      </>\n    );\n  };\n\n  return (\n    <>\n      {topic === \"\" ? (\n        <>\n          <Center mt={5}>\n            <Heading>Select Topic</Heading>\n          </Center>\n          <Stack direction=\"row\" mt={5} justify=\"center\">\n            {Object.keys(WORDS).map((topic, idx) => {\n              return (\n                <Button\n                  colorScheme=\"teal\"\n                  key={idx}\n                  onClick={() => selectTopic(topic)}\n                >\n                  {topic}\n                </Button>\n              );\n            })}\n          </Stack>\n        </>\n      ) : (\n        generateGame()\n      )}\n\n      {gameState === 0 ? (\n        \"\"\n      ) : (\n        <EndGame\n          displayText= {gameState === 1? \"You Win! :D\": \"You Lose :(\"}\n          restart={() => {window.location.reload()}}\n          word={word}\n          gameState={ gameState }\n        />\n      )}\n\n      <Keyboard selectLetter={selectLetter} started={topic} guessed={guessed} end={gameState!==0} />\n    </>\n  );\n}\n",[],"/Users/hanxingjian/Desktop/Coding/hangman/src/components/preloader/Preloader.js",[],[],"/Users/hanxingjian/Desktop/Coding/hangman/src/pages/home/Home.js",[],[],"/Users/hanxingjian/Desktop/Coding/hangman/src/Words.js",[],[],"/Users/hanxingjian/Desktop/Coding/hangman/src/components/hangman/index.js",[],[],"/Users/hanxingjian/Desktop/Coding/hangman/src/components/keyboard/index.js",[],[],"/Users/hanxingjian/Desktop/Coding/hangman/src/components/endgame/index.js",[],[],"/Users/hanxingjian/Desktop/Coding/hangman/src/components/hangman/Hangman.js",["81"],[],"/Users/hanxingjian/Desktop/Coding/hangman/src/components/endgame/EndGame.js",["82","83"],[],"import React, {useState, useEffect} from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Button, Stack, Heading, Text, Center } from \"@chakra-ui/react\"\nimport Confetti from \"react-confetti\"\n\nexport default function EndGame(props) {\n  const { displayText, restart, word, gameState } = props;\n  // Hook\n  return (\n    <>\n      <Center mt={5}>\n        <Heading>{displayText}</Heading>\n      </Center>\n\n      {gameState === 2 ? (\n        <Center mt={5}>\n          <Text fontSize=\"lg\" color=\"tomato\">\n            <b>Word: {word}</b>\n          </Text>\n        </Center>\n      ) : (\n        <Confetti\n          width={window.innerWidth}\n          height={window.innerHeight}\n          numberOfPieces={500}\n          recycle={false}\n        />\n      )}\n      <Stack direction=\"row\" mt={5} justify=\"center\">\n        <Link to=\"/\">\n          <Button colorScheme=\"teal\">Home</Button>\n        </Link>\n        <Button colorScheme=\"teal\" onClick={restart}>\n          Restart\n        </Button>\n      </Stack>\n    </>\n  );\n}","/Users/hanxingjian/Desktop/Coding/hangman/src/components/keyboard/Keyboard.js",[],[],{"ruleId":"84","severity":1,"message":"85","line":42,"column":6,"nodeType":"86","endLine":42,"endColumn":22,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":5,"column":1,"nodeType":"90","messageId":"91","endLine":7,"endColumn":2},{"ruleId":"92","severity":1,"message":"93","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":24},{"ruleId":"92","severity":1,"message":"96","line":1,"column":26,"nodeType":"94","messageId":"95","endLine":1,"endColumn":35},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'word.length'. Either include it or remove the dependency array.","ArrayExpression",["97"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",{"desc":"98","fix":"99"},"Update the dependencies array to be: [correctLetters, word.length]",{"range":"100","text":"101"},[1314,1330],"[correctLetters, word.length]"]
{"ast":null,"code":"var _jsxFileName = \"/Users/hanxingjian/Desktop/Coding/hangman/src/pages/game/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport EndGame from \"../../components/endgame\";\nimport Hangman from \"../../components/hangman\";\nimport Keyboard from \"../../components/keyboard\";\nimport { Button, Stack, Heading, Center } from \"@chakra-ui/react\";\nimport { WORDS, randomWord } from \"../../Words\";\nimport \"animate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LIVES = 6;\nexport default function Game() {\n  _s();\n\n  const [lives, setLives] = useState(LIVES);\n  const [guessed, setGuessed] = useState([]);\n  const [topic, setTopic] = useState(\"\");\n  const [word, setWord] = useState(\"\");\n  const [correctLetters, setCorrectLetters] = useState(-1);\n  const [gameState, setGameState] = useState(0);\n\n  const selectTopic = topic => {\n    let word = randomWord(topic);\n    setWord(word);\n    setTopic(topic);\n    setCorrectLetters(0);\n  };\n\n  const countOccurence = letter => {\n    const re = new RegExp(letter, \"g\");\n    const count = word.match(re).length;\n    return count;\n  };\n\n  const selectLetter = event => {\n    setGuessed([...guessed, event.target.name]);\n\n    if (word.toLowerCase().indexOf(event.target.name.toLowerCase()) > -1) {\n      setCorrectLetters(correctLetters + countOccurence(event.target.name));\n    } else setLives(lives - 1);\n  };\n\n  useEffect(() => {\n    if (correctLetters === word.length) setGameState(1);\n  }, [correctLetters]);\n  useEffect(() => {\n    if (lives < 1) setGameState(2);\n  }, [lives]);\n\n  const generateGame = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          pt: 5,\n          children: topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        mt: 5,\n        children: /*#__PURE__*/_jsxDEV(Hangman, {\n          lives: lives\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        letterSpacing: 5,\n        children: word.split(\"\").map((letter, idx) => {\n          return /*#__PURE__*/_jsxDEV(Heading, {\n            className: \"animate__animated animate__bounceInLeft\",\n            children: guessed.indexOf(letter) > -1 ? /*#__PURE__*/_jsxDEV(Heading, {\n              className: \"animate__animated animate__flipInX\",\n              children: letter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 49\n            }, this) : \"_\"\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"xs\",\n          children: [\"Lives: \", lives]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [topic === \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Center, {\n        mt: 5,\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Select Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        mt: 5,\n        justify: \"center\",\n        children: Object.keys(WORDS).map((topic, idx) => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"teal\",\n            onClick: () => selectTopic(topic),\n            children: topic\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : generateGame(), gameState === 0 ? \"\" : /*#__PURE__*/_jsxDEV(EndGame, {\n      displayText: gameState === 1 ? \"You Win! :D\" : \"You Lose :(\",\n      restart: () => {\n        window.location.reload();\n      },\n      word: word,\n      gameState: gameState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n      selectLetter: selectLetter,\n      started: topic,\n      guessed: guessed,\n      end: gameState !== 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"GTWQz/wNKx56iUw1/tr3Gkg1d6A=\");\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","EndGame","Hangman","Keyboard","Button","Stack","Heading","Center","WORDS","randomWord","LIVES","Game","lives","setLives","guessed","setGuessed","topic","setTopic","word","setWord","correctLetters","setCorrectLetters","gameState","setGameState","selectTopic","countOccurence","letter","re","RegExp","count","match","length","selectLetter","event","target","name","toLowerCase","indexOf","generateGame","split","map","idx","Object","keys","window","location","reload"],"sources":["/Users/hanxingjian/Desktop/Coding/hangman/src/pages/game/Game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport EndGame from \"../../components/endgame\";\nimport Hangman from \"../../components/hangman\";\nimport Keyboard from \"../../components/keyboard\";\nimport { Button, Stack, Heading, Center } from \"@chakra-ui/react\";\nimport { WORDS, randomWord } from \"../../Words\";\nimport \"animate.css\"\n\nconst LIVES = 6;\n\nexport default function Game() {\n  const [lives, setLives] = useState(LIVES);\n  const [guessed, setGuessed] = useState([]);\n  const [topic, setTopic] = useState(\"\");\n  const [word, setWord] = useState(\"\");\n  const [correctLetters, setCorrectLetters] = useState(-1);\n  const [gameState, setGameState] = useState(0);\n\n  const selectTopic = (topic) => {\n    let word = randomWord(topic);\n    setWord(word);\n    setTopic(topic);\n    setCorrectLetters(0)\n  };\n\n  const countOccurence = (letter) => {\n    const re = new RegExp(letter, \"g\");\n    const count = word.match(re).length;\n    return count;\n  };\n  \n  const selectLetter = (event) => {\n    setGuessed([...guessed, event.target.name]);\n\n    if (word.toLowerCase().indexOf(event.target.name.toLowerCase()) > -1) {\n      setCorrectLetters(correctLetters + countOccurence(event.target.name));\n    } else setLives(lives - 1);\n  };\n\n  useEffect(() => {\n    if (correctLetters === word.length) setGameState(1)\n  }, [correctLetters]);\n\n  useEffect(() => {\n    if (lives < 1) setGameState(2)\n  }, [lives]);\n\n  const generateGame = () => {\n    return (\n      <>\n        <Center>\n          <Heading pt={5}>{topic}</Heading>\n        </Center>\n        <Center mt={5}>\n          <Hangman lives={lives}/>\n        </Center>\n        <Center letterSpacing={5}>\n          {word.split(\"\").map((letter, idx) => {\n            return (\n              <Heading key={idx} className=\"animate__animated animate__bounceInLeft\">\n                {guessed.indexOf(letter) > -1 ? <Heading className=\"animate__animated animate__flipInX\">{letter}</Heading> : \"_\"}\n              </Heading>\n            );\n          })}\n        </Center>\n        <Center mt={2}>\n          <Heading size=\"xs\">Lives: {lives}</Heading>\n        </Center>\n      </>\n    );\n  };\n\n  return (\n    <>\n      {topic === \"\" ? (\n        <>\n          <Center mt={5}>\n            <Heading>Select Topic</Heading>\n          </Center>\n          <Stack direction=\"row\" mt={5} justify=\"center\">\n            {Object.keys(WORDS).map((topic, idx) => {\n              return (\n                <Button\n                  colorScheme=\"teal\"\n                  key={idx}\n                  onClick={() => selectTopic(topic)}\n                >\n                  {topic}\n                </Button>\n              );\n            })}\n          </Stack>\n        </>\n      ) : (\n        generateGame()\n      )}\n\n      {gameState === 0 ? (\n        \"\"\n      ) : (\n        <EndGame\n          displayText= {gameState === 1? \"You Win! :D\": \"You Lose :(\"}\n          restart={() => {window.location.reload()}}\n          word={word}\n          gameState={ gameState }\n        />\n      )}\n\n      <Keyboard selectLetter={selectLetter} started={topic} guessed={guessed} end={gameState!==0} />\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}